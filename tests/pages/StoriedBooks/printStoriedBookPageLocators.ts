import { Page } from '@playwright/test';

export const Locators = (page: Page) => ({
    printstoriedBookLinkElement: page.getByRole('link', { name: "Print StoriedBooks™" }),
    storiedBooksTextElement: page.getByText('StoriedBooks™', { exact: true }),
    getStartedButton: page.getByRole('button', { name: "Get Started" }),
    selectStoriesNextButton: page.locator('xpath=//div[@class="ss-header-content"]/div[2]/button/div/span'),
    closeSelectedStoriesXIcon: page.locator('.btn').first(),
    quickViewElement: page.getByRole('button', { name: "Open quick view" }),
    closeStoryXIcon: page.getByTestId("close-story"),
    SelectStoriesforThisStoriedBookPageHeaderElement: page.getByText("Select Stories for this"),
    sarahStoryTitle: page.getByRole('heading', { name: "Sarah Vida Jones" }).locator("span"),
    historyStoryTitle: page.getByRole('heading', { name: "History of Val Verda Wards" }).locator("span"),
    sarahStoryHeading: page.locator("xpath=//div[@class=\"story-title mb-1\"]//h2//span"),
    likeButtonElement: page.locator("div:nth-child(2) > div > .btn").first(),
    addCommentButtonElement: page.locator('button').filter({ hasText: "Learn more" }).nth(2),
    uploadStoryElement: page.locator('button').filter({ hasText: "Learn more" }).nth(3),
    sarahStoryOrderElement: page.locator('xpath=//div[@class="inc-item-content-block"]').nth(1),
    historyStoryOrderElement: page.locator('xpath=//div[@class="inc-item-content-block"]').nth(2),
    chooseStoryOrderBackButtonElement: page.locator('xpath=//div[@class="hidden md:flex"]/div/button/div/span'),
    chooseStoryOrderNextButtonElement: page.locator('xpath=//div[@class="hidden md:flex"]/button'),
    booksOptionsHeaderElement: page.getByText('Book Options'),
    booksOptionsBackButtonElement: page.getByRole('button', { name: 'Back' }),
    chooseStoryOrderHeaderElement: page.getByText('Choose Story Order'),
    firstStoryBookName: page.locator("xpath=//h3[@class=\"title-container\"]//span").first(),
    secondStoryBookName: page.locator("xpath=//h3[@class=\"title-container\"]//span").last(),
    selectFirstStory: page.locator("xpath=//span[@class=\"checkmark\"]").first(),
    titleInputBox: page.getByPlaceholder('Title'),
    booksOptionsBar: page.getByText('Book OptionsAdd a TitleBack Next'),
    titleNameOnTheCoverPage: page.locator("xpath=//div[@class=\"front-cover-title\"]"),
    titleNameOntheMidBookPage: page.locator("xpath=//div[@class=\"heading\"]"),
    titleNameOntheInputBox: page.locator("xpath=//div[@class=\"title-input-wrap\"]//input"),
    titleNameIsEmpty: page.getByText('0/60'),
    addSubtitleButton: page.getByRole('button', { name: 'Add a subtitle' }),
    subtitlePlaceHolder: page.getByPlaceholder('Subtitle'),
    frontCoverSubtitle: page.locator("xpath=//div[@class=\"front-cover-subtitle\"]"),
    trashIconSubtitle: page.getByTestId('icon-trash').getByRole('img'),
    subtitleNameOntheSubtitleInputBox: page.locator("xpath=//input[@placeholder=\"Subtitle\"]"),
    closeButtonElementInBooksOptionPage: page.locator('header').getByRole('button').first(),
    continueButtonElementForDraftBook: page.locator('.md\\:mb-4 > .btn').first(),
    characterLimitForTitle: page.getByText('60/60'),
    characterLimitForSubtitle: page.getByText('40/40'),
    inputTitleBoxWithExistingTitle: page.getByPlaceholder('Title', { exact: true }),
    storiedWatermark: page.getByRole('article').getByRole('img').first(),

    bookColorLabel: page.locator("xpath=//label[contains(text(),'Book Color')]"),
    paleGrayColor: page.locator("xpath=//div[@class='color-palette palette-pale-gray ']"),
    appliedPaleGrayColor: page.locator("xpath=//div[@class=\"cover-layout title-bottom palette-pale-gray\"]"),
    selectedPaleGrayColorName: page.getByText('Pale Gray'),
    mistyBlueColor: page.locator("xpath=//div[@class='color-palette palette-misty-blue ']"),
    appliedMistyBlueColor: page.locator("xpath=//div[@class=\"cover-layout title-bottom palette-misty-blue\"]"),
    selectedMistyBlueColorName: page.getByText('Misty Blue'),
    rosePinkColor: page.locator("xpath=//div[@class='color-palette palette-rose-pink ']"),
    appliedRosePinkColor: page.locator("xpath=//div[@class=\"cover-layout title-bottom palette-rose-pink\"]"),
    selectedRosePinkColorName: page.getByText('Rose Pink'),
    sandColor: page.locator("xpath=//div[@class='color-palette palette-sand ']"),
    appliedSandColor: page.locator("xpath=//div[@class=\"cover-layout title-bottom palette-sand\"]"),
    selectedSandColorName: page.getByText('Sand'),
    charcoalColor: page.locator("xpath=//div[@class='color-palette palette-charcoal ']"),
    appliedCharcoalColor: page.locator("xpath=//div[@class=\"cover-layout title-bottom palette-charcoal\"]"),
    selectedCharcoalColorName: page.getByText('Charcoal'),
    forestGreenColor: page.locator("xpath=//div[@class='color-palette palette-forest-green ']"),
    appliedForestGreenColor: page.locator("xpath=//div[@class=\"cover-layout title-bottom palette-forest-green\"]"),
    selectedForestGreenColorName: page.getByText('Forest Green'),
    tigerEyeColor: page.locator("xpath=//div[@class='color-palette palette-tiger-eye ']"),
    appliedTigerEyeColor: page.locator("xpath=//div[@class=\"cover-layout title-bottom palette-tiger-eye\"]"),
    selectedTigerEyeColorName: page.getByText('Tiger Eye'),
    midnightBlueColor: page.locator("xpath=//div[@class='color-palette palette-midnight-blue ']"),
    appliedMidnightBlueColor: page.locator("xpath=//div[@class=\"cover-layout title-bottom palette-midnight-blue\"]"),
    selectedMidnightBlueColorName: page.getByText('Midnight Blue'),
    darkLavenderColor: page.locator("xpath=//div[@class='color-palette palette-dark-lavender ']"),
    appliedDarkLavenderColor: page.locator("xpath=//div[@class=\"cover-layout title-bottom palette-dark-lavender\"]"),
    selectedDarkLavenderColorName: page.getByText('Dark Lavendar'),
    wineColor: page.locator("xpath=//div[@class='color-palette palette-wine ']"),
    appliedWineColor: page.locator("xpath=//div[@class=\"cover-layout title-bottom palette-wine\"]"),
    selectedWineColorName: page.getByText('Wine'),
    clayColor: page.locator("xpath=//div[@class='color-palette palette-clay ']"),
    appliedClayColor: page.locator("xpath=//div[@class=\"cover-layout title-bottom palette-clay\"]"),
    selectedClayColorName: page.getByText('Clay'),
    deepOceanBlueColor: page.locator("xpath=//div[@class='color-palette palette-deep-ocean-blue ']"),
    appliedDeepOceanBlueColor: page.locator("xpath=//div[@class=\"cover-layout title-bottom palette-deep-ocean-blue\"]"),
    selectedDeepOceanBlueColorName: page.getByText('Deep Ocean Blue'),
    slateColor: page.locator("xpath=//div[@class='color-palette palette-slate ']"),
    appliedSlateColor: page.locator("xpath=//div[@class=\"cover-layout title-bottom palette-slate\"]"),
    selectedSlateColorName: page.getByText('Slate'),
    cherryColor: page.locator("xpath=//div[@class='color-palette palette-cherry ']"),
    appliedCherryColor: page.locator("xpath=//div[@class=\"cover-layout title-bottom palette-cherry\"]"),
    selectedCherryColorName: page.getByText('Cherry'),
    skyBlueColor: page.locator("xpath=//div[@class='color-palette palette-sky-blue ']"),
    appliedSkyBlueColor: page.locator("xpath=//div[@class=\"cover-layout title-bottom palette-sky-blue\"]"),
    selectedSkyBlueColorName: page.getByText('Sky Blue'),
    rubyColor: page.locator("xpath=//div[@class='color-palette palette-ruby ']"),
    appliedRubyColor: page.locator("xpath=//div[@class=\"cover-layout title-bottom palette-ruby\"]"),
    selectedRubyColorName: page.getByText('Ruby'),
    barleyColor: page.locator("xpath=//div[@class='color-palette palette-barley ']"),
    appliedBarleyColor: page.locator("xpath=//div[@class=\"cover-layout title-bottom palette-barley\"]"),
    selectedBarleyColorName: page.getByText('Barley'),
    lavenderColor: page.locator("xpath=//div[@class='color-palette palette-lavender ']"),
    appliedLavenderColor: page.locator("xpath=//div[@class=\"cover-layout title-bottom palette-lavender\"]"),
    selectedLavenderColorName: page.getByText('Lavendar'),
    cobaltBlueColor: page.locator("xpath=//div[@class='color-palette palette-cobalt-blue ']"),
    appliedCobaltBlueColor: page.locator("xpath=//div[@class=\"cover-layout title-bottom palette-cobalt-blue\"]"),
    selectedCobaltBlueColorName: page.getByText('Cobalt Blue'),

    addForewordButtonElement: page.getByRole('button', { name: 'Add a foreword' }),
    addForewordModalHeading: page.getByRole('heading', { name: 'Add a Foreword' }),
    forewordSubtitle: page.getByText('Foreword', { exact: true }),
    addForewordCancelButton: page.getByRole('button', { name: 'Cancel' }),
    addForewordSaveButton: page.getByRole('button', { name: 'Save' }),
    addForewordModalXIconButton: page.locator('div').filter({ hasText: /^Add a Foreword$/ }).getByRole('button'),
    addForewordTextInputBox: page.locator("xpath=//textarea[@placeholder='Add a foreword...']"),
    addedForewordText: page.locator("xpath=//div[@class='btn-foreword max-w-60']//span"),
    forewordTrashIcon: page.getByTestId('icon-trash').getByRole('img'),
    discardForewordHeading: page.getByRole('heading', { name: 'Discard Foreword?' }),
    discardForewordButton: page.getByRole('button', { name: 'Discard Foreword' }),
    saveAndCloseButtonInDiscardForewordModal: page.getByRole('button', { name: 'Save & Close' }),
    discardForewardXIcon: page.locator('div').filter({ hasText: /^Discard Foreword\?$/ }).getByRole('button'),

    firstStoryToDrag: page.locator("xpath=//div[@class='inc-list-item is-draggable']").first(),
    secondStory: page.locator("xpath=//div[@class='inc-list-item is-draggable']").last(),
    characterLimitForForeword: page.getByText('800/800'),

    coverImageText: page.getByText('Cover Image'),
    addPhotoButtonBooksOptionPage: page.getByRole('button', { name: 'Add a Photo' }),
    addedImageOnFrontCoverPage: page.locator("xpath=//div[@class='cover-photo']//img"),
    addedCoverImageOnCoverImageBlock: page.locator("xpath=//div[@class='cover-image-block']//figure//div//img"),
    changeCoverImageButton: page.getByRole('button', { name: 'Change Image' }),
    resizeAndCropImageButtonStoriedBook: page.getByRole('button', { name: 'Crop and Resize' }),
    moveTitleToTopButton: page.locator("xpath=//span[contains(text(),'Move title to top')]"),
    moveTitleToBottom: page.getByText('Move title to bottom'),
    titleMovedToTop: page.locator("xpath=//div[@class='cover-layout title-top palette-cloud-white']"),
    titleMovedToBottom: page.locator("xpath=//div[@class='cover-layout title-bottom palette-cloud-white']"),

    coverImageHalfPageLabel: page.locator("xpath=//label[@for='halfPage']//img"),
    coverImageFullPageLabel: page.locator('label').filter({ hasText: 'Full pageMove title to top' }),
    noImageLabelCoverImage: page.locator('label').filter({ hasText: 'No image' }),

    selectImageFromScrapbook: page.locator("xpath=//*[@class=\"media-upload-container h-full\"]/div[2]/div[2]/div[1]/div[1]/div"),
    selectButtonElement: page.getByRole('button', { name: 'Select' }),
    addCoverImageSrapBookHeader: page.locator("xpath=//h3[contains(text(),'Add Cover Image')]"),

    expectedStoryCountInTheFirstDraftProject: page.locator("xpath=//div[@class='project-card']//p//span").first(),
    actualStoryCountInTheSelectStoriesForStoriedBookPage: page.locator("xpath=//div[@class='ssh-left-col flex']//div//p//span"),
    crossButtonChooseStoryOrderPage:  page.getByTestId('cross-icon'),
});

